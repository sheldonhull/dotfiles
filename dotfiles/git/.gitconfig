[core]
    excludesfile =
    autocrlf = true
    editor = code --wait

[alias]
      # Git Commit, Add all and Push — in one step.
    cap = "!f() { git add .; git commit -m \"$@\"; git push; }; f"
    # NEW.
    new = "!f() { git cap \"📦 NEW: $@\"; }; f"
    # IMPROVE.
    imp = "!f() { git cap \"👌 IMPROVE: $@\"; }; f"
    # FIX.
    fix = "!f() { git cap \"🐛 FIX: $@\"; }; f"
    # RELEASE.
    rlz = "!f() { git cap \"🚀 RELEASE: $@\"; }; f"
    # DOC.
    doc = "!f() { git cap \"📖 DOC: $@\"; }; f"
    # TEST.
    tst = "!f() { git cap \"🤖 TEST: $@\"; }; f"
    logfilter = "!f() { git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short --grep \"$1\"; }; f"
    pr = "!f() { exec vsts code pr \"$@\"; }; f"
    repo = "!f() { exec vsts code repo \"$@\"; }; f"
    lg = log -100 --pretty=tformat:'%H -- %ae -- %ce'
    change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch -f --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "
    fixup = commit -a --amend -C HEAD
	pushf = push --force-with-lease

#############################################################
# Conditional Paths to include work email or personal email #
#############################################################

[includeIf "gitdir:~/git/"]
  path = .gitconfig-personal
[includeIf "gitdir:~/git-voyanta"]
  path = .gitconfig-work
[includeIf "gitdir:/c/"]
  path = .gitconfig-personal

# requires manual setup and not including in repo. This is auth token for git-town to run. must setup manually
[includeIf "gitdir:/c"]
    path = .gitconfig-gittown


# WINDOWS
[includeIf "gitdir:/c/"]
  helper = manager
    # Reset git config --system --unset credential.helper; git config --system --add credential.helper manager


# [credential "github.com]
#     authority = GitHub


# Comment: You just added this via 'git config --global core.editor "code --wait"'
# Comment: Start of "Extra Block"
# Comment: This is to unlock VSCode as your git diff and git merge tool
[merge]
	tool = vscode
[mergetool "vscode"]
	cmd = code --wait $MERGED
[diff]
    tool = vscode
[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE


################
# GIT SETTINGS #
################

[push]
	followTags = true
[pull]
	rebase = true
[rebase]
	autosquash = true


####################################################################
# SECRET WATCHER // BLOCK GLOBALLY IF ANY SECRETS DETECTED IN REPO #
####################################################################
[init]
	templateDir = ~/.git-templates/git-secrets
[secrets]
	providers = git secrets --aws-provider
	patterns = (A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}
	patterns = (\"|')?(AWS|aws|Aws)?_?(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(\"|')?\\s*(:|=>|=)\\s*(\"|')?[A-Za-z0-9/\\+=]{40}(\"|')?
	patterns = (\"|')?(AWS|aws|Aws)?_?(ACCOUNT|account|Account)_?(ID|id|Id)?(\"|')?\\s*(:|=>|=)\\s*(\"|')?[0-9]{4}\\-?[0-9]{4}\\-?[0-9]{4}(\"|')?


####################
# HUB CLI SETTINGS #
####################
[hub]
	protocol = https

###############################
# HTTPS/GIT PROTOCOL SETTINGS #
###############################

[url "https://github.com/"]
	insteadOf = git@github.com:
[url "https://"]
	insteadOf = git://
[help]
	format = html
[credential "github.com"]
	useHttpPath = false
